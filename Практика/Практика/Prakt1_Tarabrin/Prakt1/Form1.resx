<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>